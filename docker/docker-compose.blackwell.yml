version: '3.8'

services:
  # Main API Service (always included)
  chatterbox-tts:
    build:
      context: ..
      dockerfile: docker/Dockerfile.blackwell
    container_name: chatterbox-tts-api-blackwell
    ports:
      - '${PORT:-4123}:${PORT:-4123}'
    environment:
      # API Configuration
      - PORT=${PORT:-4123}
      - HOST=${HOST:-0.0.0.0}

      # TTS Model Settings
      - EXAGGERATION=${EXAGGERATION:-0.5}
      - CFG_WEIGHT=${CFG_WEIGHT:-0.5}
      - TEMPERATURE=${TEMPERATURE:-0.8}

      # Text Processing
      - MAX_CHUNK_LENGTH=${MAX_CHUNK_LENGTH:-280}
      - MAX_TOTAL_LENGTH=${MAX_TOTAL_LENGTH:-3000}

      # Long Text TTS Settings
      - LONG_TEXT_DATA_DIR=${LONG_TEXT_DATA_DIR:-/data/long_text_jobs}
      - LONG_TEXT_MAX_LENGTH=${LONG_TEXT_MAX_LENGTH:-100000}
      - LONG_TEXT_CHUNK_SIZE=${LONG_TEXT_CHUNK_SIZE:-2500}
      - LONG_TEXT_SILENCE_PADDING_MS=${LONG_TEXT_SILENCE_PADDING_MS:-200}
      - LONG_TEXT_JOB_RETENTION_DAYS=${LONG_TEXT_JOB_RETENTION_DAYS:-7}
      - LONG_TEXT_MAX_CONCURRENT_JOBS=${LONG_TEXT_MAX_CONCURRENT_JOBS:-3}
      - LONG_TEXT_MIN_LENGTH=${LONG_TEXT_MIN_LENGTH:-100}
      - LONG_TEXT_CHUNKING_STRATEGY=${LONG_TEXT_CHUNKING_STRATEGY:-sentence}
      - LONG_TEXT_QUALITY_PRESET=${LONG_TEXT_QUALITY_PRESET:-balanced}
      - QUALITY_FAST_CHUNK_SIZE=${QUALITY_FAST_CHUNK_SIZE:-1500}
      - QUALITY_FAST_CFG_WEIGHT=${QUALITY_FAST_CFG_WEIGHT:-0.3}
      - QUALITY_FAST_TEMPERATURE=${QUALITY_FAST_TEMPERATURE:-0.6}
      - QUALITY_BALANCED_CHUNK_SIZE=${QUALITY_BALANCED_CHUNK_SIZE:-2500}
      - QUALITY_BALANCED_CFG_WEIGHT=${QUALITY_BALANCED_CFG_WEIGHT:-0.5}
      - QUALITY_BALANCED_TEMPERATURE=${QUALITY_BALANCED_TEMPERATURE:-0.8}
      - QUALITY_HIGH_CHUNK_SIZE=${QUALITY_HIGH_CHUNK_SIZE:-3500}
      - QUALITY_HIGH_CFG_WEIGHT=${QUALITY_HIGH_CFG_WEIGHT:-0.7}
      - QUALITY_HIGH_TEMPERATURE=${QUALITY_HIGH_TEMPERATURE:-1.0}

      # Voice and Model Settings
      - VOICE_SAMPLE_PATH=/app/voice-sample.mp3
      - DEVICE=${DEVICE:-cuda}
      - MODEL_CACHE_DIR=${MODEL_CACHE_DIR:-/cache}
      - VOICE_LIBRARY_DIR=${VOICE_LIBRARY_DIR:-/voices}

      # NVIDIA/CUDA settings
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
    volumes:
      # Mount voice sample file (optional)
      - ${VOICE_SAMPLE_HOST_PATH:-../voice-sample.mp3}:/app/voice-sample.mp3:ro

      # Mount model cache for persistence
      - chatterbox-models:${MODEL_CACHE_DIR:-/cache}

      # Mount voice library for persistence
      - chatterbox-voices:${VOICE_LIBRARY_DIR:-/voices}

      # Optional: Mount custom voice samples directory (legacy)
      - ${VOICE_SAMPLES_DIR:-../voice-samples}:/app/voice-samples:ro

    # GPU support (enabled by default for this compose file)
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

    restart: unless-stopped

    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:${PORT:-4123}/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 300s

  # Frontend Service with integrated proxy (optional - requires 'frontend' profile)
  frontend:
    profiles: ['frontend', 'ui', 'fullstack']
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: chatterbox-tts-frontend
    ports:
      - '${FRONTEND_PORT:-4321}:80' # Frontend serves on port 80 internally
    depends_on:
      - chatterbox-tts
    restart: unless-stopped

volumes:
  chatterbox-models:
    driver: local
  chatterbox-voices:
    driver: local
  chatterbox-longtext-data:
    driver: local
